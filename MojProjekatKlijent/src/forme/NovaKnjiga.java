/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Knjiga;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.KomunikacijaSaServerom;
import konstante.Operacije;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author gaga__m
 */
public class NovaKnjiga extends javax.swing.JFrame {

    private Knjiga knjiga;
    
    /**
     * Creates new form NovaKnjiga
     */
    public NovaKnjiga() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(255, 204, 102));
        btnIzmeni.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNazivKnjige = new javax.swing.JTextField();
        txtAutor = new javax.swing.JTextField();
        txtCena = new javax.swing.JTextField();
        txtStanjeNaZalihama = new javax.swing.JTextField();
        btnSacuvajKnjigu = new javax.swing.JButton();
        btnZatvori = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Unos knjige");

        jLabel1.setText("Naziv knjige");

        jLabel2.setText("Autor");

        jLabel3.setText("Cena");

        jLabel4.setText("Stanje na zalihama");

        btnSacuvajKnjigu.setText("Sacuvaj knjigu");
        btnSacuvajKnjigu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajKnjiguActionPerformed(evt);
            }
        });

        btnZatvori.setText("Zatvori");
        btnZatvori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZatvoriActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnZatvori)
                        .addGap(56, 56, 56)
                        .addComponent(btnIzmeni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addComponent(btnSacuvajKnjigu))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNazivKnjige)
                            .addComponent(txtAutor)
                            .addComponent(txtCena)
                            .addComponent(txtStanjeNaZalihama, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNazivKnjige, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtStanjeNaZalihama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvajKnjigu)
                    .addComponent(btnZatvori)
                    .addComponent(btnIzmeni))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajKnjiguActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajKnjiguActionPerformed
       
       
       if (txtNazivKnjige.getText().isEmpty() || txtAutor.getText().isEmpty() || txtCena.getText().trim().isEmpty() || txtStanjeNaZalihama.getText().trim().isEmpty() ) {
            JOptionPane.showMessageDialog(this, "Unesite sve podatke");
            return;
        } else {
           String nazivKnjige = txtNazivKnjige.getText();
           String autor = txtAutor.getText();
           double cena = Double.parseDouble(txtCena.getText().trim());
           int stanjeNaZalihama = Integer.parseInt(txtStanjeNaZalihama.getText().trim());
       
           if(cena < 0){
               JOptionPane.showMessageDialog(this, "Cena mora biti veca od nule.");
                return;
           }
            if(stanjeNaZalihama < 0){
               JOptionPane.showMessageDialog(this, "Stanje na zalihama mora biti vece od nule.");
                return;
           }    
            Knjiga k = new Knjiga(-1, nazivKnjige, autor, cena, stanjeNaZalihama);
            KlijentskiZahtev kz = new KlijentskiZahtev();
            kz.setOperacija(Operacije.SACUVAJ_KNJIGU);
            kz.setParametar(k);
            
            try {
                KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
                ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();

                if (so.getIzuzetak() == null) {
                    JOptionPane.showMessageDialog(this, "Sistem je zapamtio knjigu");
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti knjigu");
                    throw new Exception(so.getIzuzetak());
                }

            } catch (IOException ex) {
                Logger.getLogger(NoviKupac.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(NoviKupac.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
    }//GEN-LAST:event_btnSacuvajKnjiguActionPerformed

    private void btnZatvoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZatvoriActionPerformed
        this.dispose();
        
    }//GEN-LAST:event_btnZatvoriActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        String nazivKnjige = txtNazivKnjige.getText();
        String autor = txtAutor.getText();
        String stanjeNaZalihamaaa = txtStanjeNaZalihama.getText().trim();
        int stanjeNaZalihama = Integer.parseInt(stanjeNaZalihamaaa);
        String cenaa = txtCena.getText().trim();
        double cena = Double.parseDouble(cenaa);
        
        if (nazivKnjige.isEmpty() || autor.isEmpty() || stanjeNaZalihamaaa.isEmpty() || cenaa.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Unesite sve podatke");
        } else {
            Knjiga k = new Knjiga(knjiga.getKnjigaID(), nazivKnjige, autor, cena, stanjeNaZalihama);
            KlijentskiZahtev kz = new KlijentskiZahtev();
            kz.setOperacija(Operacije.IZMENI_KNJIGU);
            kz.setParametar(k);

            try {
                KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
                ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();

                if (so.getIzuzetak() == null) {
                    JOptionPane.showMessageDialog(this, "Sistem je izmenio knjigu.");
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Sistem ne moze da izmeni knjigu.");
                    throw new Exception(so.getIzuzetak());    
                }

            } catch (IOException ex) {
                Logger.getLogger(NoviKupac.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(NoviKupac.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NovaKnjiga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NovaKnjiga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NovaKnjiga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NovaKnjiga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NovaKnjiga().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnSacuvajKnjigu;
    private javax.swing.JButton btnZatvori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtCena;
    private javax.swing.JTextField txtNazivKnjige;
    private javax.swing.JTextField txtStanjeNaZalihama;
    // End of variables declaration//GEN-END:variables

    public Knjiga getKnjiga() {
        return knjiga;
    }

    public void setKnjiga(Knjiga knjiga) {
        this.knjiga = knjiga;
        txtNazivKnjige.setText(knjiga.getNazivKnjige());
        txtAutor.setText(knjiga.getAutor());
        txtCena.setText(String.valueOf(knjiga.getCena()));
        txtStanjeNaZalihama.setText(String.valueOf(knjiga.getStanjeNaZalihama()));
        this.setTitle("Izmena knjige");
        btnSacuvajKnjigu.setEnabled(false);
        btnIzmeni.setEnabled(true);
    }
}
