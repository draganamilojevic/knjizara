/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Kupac;
import domen.OpstiDomenskiObjekat;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.KomunikacijaSaServerom;
import konstante.Operacije;
import model.ModelTabeleKupac;
import niti.OsvezavanjeNit;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author gaga__m
 */
public class PretragaKupaca extends javax.swing.JFrame {

    /**
     * Creates new form PretragaKupaca
     */
    public PretragaKupaca() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(255, 204, 102));
        OsvezavanjeNit on = new OsvezavanjeNit(this);
        on.start();
        //srediTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtKriterijumPretrage = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaKupac = new javax.swing.JTable();
        btnPrikaziDetalje = new javax.swing.JButton();
        checkKriterijum = new javax.swing.JCheckBox();
        btnZatvori = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pretraga kupaca");

        tabelaKupac.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaKupac);

        btnPrikaziDetalje.setText("Prikazi detalje / Izmeni");
        btnPrikaziDetalje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikaziDetaljeActionPerformed(evt);
            }
        });

        checkKriterijum.setText("Krierijum pretrage");

        btnZatvori.setText("Zatvori");
        btnZatvori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZatvoriActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(checkKriterijum)
                        .addGap(18, 18, 18)
                        .addComponent(txtKriterijumPretrage))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(btnPrikaziDetalje, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnZatvori, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 11, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKriterijumPretrage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkKriterijum))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrikaziDetalje)
                    .addComponent(btnZatvori)
                    .addComponent(btnObrisi))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnZatvoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZatvoriActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnZatvoriActionPerformed

    private void btnPrikaziDetaljeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikaziDetaljeActionPerformed

        int red = tabelaKupac.getSelectedRow();
        if (red != -1) {
            ModelTabeleKupac mtk = (ModelTabeleKupac) tabelaKupac.getModel();
            Kupac k = mtk.vratiMiIzabranogKupca(red);

            NoviKupac novi = new NoviKupac();
            novi.setKupac(k);
           
            novi.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Nije odabran kupac");
        }
    }//GEN-LAST:event_btnPrikaziDetaljeActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int red = tabelaKupac.getSelectedRow();
        if (red != -1) {
            ModelTabeleKupac mtk = (ModelTabeleKupac) tabelaKupac.getModel();
            Kupac k = mtk.vratiMiIzabranogKupca(red);

            KlijentskiZahtev kz = new KlijentskiZahtev();
            kz.setOperacija(Operacije.OBRISI_KUPCA);
            kz.setParametar(k);

            try {
                KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
                ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();

                if (so.getIzuzetak() == null) {
                    JOptionPane.showMessageDialog(this, "Sistem je obrisao kupca.");
                } else {
                    JOptionPane.showMessageDialog(this, "Sistem ne moze da obrise kupca.");
                    throw new Exception(so.getIzuzetak());
                }
            } catch (IOException ex) {
                Logger.getLogger(PretragaKupaca.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PretragaKupaca.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(PretragaKupaca.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Niste izabrali kupca.");
        }

    }//GEN-LAST:event_btnObrisiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PretragaKupaca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PretragaKupaca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PretragaKupaca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PretragaKupaca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PretragaKupaca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPrikaziDetalje;
    private javax.swing.JButton btnZatvori;
    private javax.swing.JCheckBox checkKriterijum;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaKupac;
    private javax.swing.JTextField txtKriterijumPretrage;
    // End of variables declaration//GEN-END:variables

    public void srediTabelu() {

        try {

            KlijentskiZahtev kz = new KlijentskiZahtev();
            kz.setOperacija(Operacije.VRATI_KUPCE);

            KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
            ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();

            List<OpstiDomenskiObjekat> listaKupacaBaza = (List<OpstiDomenskiObjekat>) so.getOdgovor();

            List<Kupac> listaFiltriranihKupaca = new ArrayList<>();

            if (checkKriterijum.isSelected()) {
                String kriterijum = txtKriterijumPretrage.getText().trim();

                for (OpstiDomenskiObjekat o : listaKupacaBaza) {
                    Kupac k = (Kupac) o;
                    if (String.valueOf(k.getKupacID()).contains(kriterijum) || k.getImePrezime().toLowerCase().contains(kriterijum.toLowerCase()) || k.getEmail().contains(kriterijum.toLowerCase()) || k.getAdresa().toLowerCase().contains(kriterijum.toLowerCase()) || k.getMaticniBroj().toLowerCase().contains(kriterijum.toLowerCase()) || k.getZiroRacun().toLowerCase().contains(kriterijum.toLowerCase()) || k.getMesto().getNaziv().toLowerCase().contains(kriterijum.toLowerCase())) {
                        listaFiltriranihKupaca.add(k);
                    }

                }
                if (listaFiltriranihKupaca.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje kupca po zadatoj vrednosti.");
                   
                } else {
                    JOptionPane.showMessageDialog(this, "Sistem je nasao kupce po zadatoj vrednosti.");
                    
                }
            } else {
                for (OpstiDomenskiObjekat o : listaKupacaBaza) {
                    Kupac k = (Kupac) o;
                    listaFiltriranihKupaca.add(k);
                }
            }

            ModelTabeleKupac mtk = new ModelTabeleKupac(listaFiltriranihKupaca);
            tabelaKupac.setModel(mtk);

        } catch (IOException ex) {
            Logger.getLogger(PretragaKupaca.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PretragaKupaca.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
